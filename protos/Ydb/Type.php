<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_value.proto

namespace Ydb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.Type</code>
 */
class Type extends \Google\Protobuf\Internal\Message
{
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type_id
     *           Data types 
     *     @type \Ydb\DecimalType $decimal_type
     *     @type \Ydb\OptionalType $optional_type
     *           Container types 
     *     @type \Ydb\ListType $list_type
     *     @type \Ydb\TupleType $tuple_type
     *     @type \Ydb\StructType $struct_type
     *     @type \Ydb\DictType $dict_type
     *     @type \Ydb\VariantType $variant_type
     *     @type int $void_type
     *           Special types 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbValue::initOnce();
        parent::__construct($data);
    }

    /**
     * Data types 
     *
     * Generated from protobuf field <code>.Ydb.Type.PrimitiveTypeId type_id = 1;</code>
     * @return int
     */
    public function getTypeId()
    {
        return $this->readOneof(1);
    }

    public function hasTypeId()
    {
        return $this->hasOneof(1);
    }

    /**
     * Data types 
     *
     * Generated from protobuf field <code>.Ydb.Type.PrimitiveTypeId type_id = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setTypeId($var)
    {
        GPBUtil::checkEnum($var, \Ydb\Type\PrimitiveTypeId::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.DecimalType decimal_type = 2;</code>
     * @return \Ydb\DecimalType
     */
    public function getDecimalType()
    {
        return $this->readOneof(2);
    }

    public function hasDecimalType()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.Ydb.DecimalType decimal_type = 2;</code>
     * @param \Ydb\DecimalType $var
     * @return $this
     */
    public function setDecimalType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\DecimalType::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Container types 
     *
     * Generated from protobuf field <code>.Ydb.OptionalType optional_type = 101;</code>
     * @return \Ydb\OptionalType
     */
    public function getOptionalType()
    {
        return $this->readOneof(101);
    }

    public function hasOptionalType()
    {
        return $this->hasOneof(101);
    }

    /**
     * Container types 
     *
     * Generated from protobuf field <code>.Ydb.OptionalType optional_type = 101;</code>
     * @param \Ydb\OptionalType $var
     * @return $this
     */
    public function setOptionalType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\OptionalType::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.ListType list_type = 102;</code>
     * @return \Ydb\ListType
     */
    public function getListType()
    {
        return $this->readOneof(102);
    }

    public function hasListType()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.Ydb.ListType list_type = 102;</code>
     * @param \Ydb\ListType $var
     * @return $this
     */
    public function setListType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\ListType::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.TupleType tuple_type = 103;</code>
     * @return \Ydb\TupleType
     */
    public function getTupleType()
    {
        return $this->readOneof(103);
    }

    public function hasTupleType()
    {
        return $this->hasOneof(103);
    }

    /**
     * Generated from protobuf field <code>.Ydb.TupleType tuple_type = 103;</code>
     * @param \Ydb\TupleType $var
     * @return $this
     */
    public function setTupleType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\TupleType::class);
        $this->writeOneof(103, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.StructType struct_type = 104;</code>
     * @return \Ydb\StructType
     */
    public function getStructType()
    {
        return $this->readOneof(104);
    }

    public function hasStructType()
    {
        return $this->hasOneof(104);
    }

    /**
     * Generated from protobuf field <code>.Ydb.StructType struct_type = 104;</code>
     * @param \Ydb\StructType $var
     * @return $this
     */
    public function setStructType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\StructType::class);
        $this->writeOneof(104, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.DictType dict_type = 105;</code>
     * @return \Ydb\DictType
     */
    public function getDictType()
    {
        return $this->readOneof(105);
    }

    public function hasDictType()
    {
        return $this->hasOneof(105);
    }

    /**
     * Generated from protobuf field <code>.Ydb.DictType dict_type = 105;</code>
     * @param \Ydb\DictType $var
     * @return $this
     */
    public function setDictType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\DictType::class);
        $this->writeOneof(105, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.VariantType variant_type = 106;</code>
     * @return \Ydb\VariantType
     */
    public function getVariantType()
    {
        return $this->readOneof(106);
    }

    public function hasVariantType()
    {
        return $this->hasOneof(106);
    }

    /**
     * Generated from protobuf field <code>.Ydb.VariantType variant_type = 106;</code>
     * @param \Ydb\VariantType $var
     * @return $this
     */
    public function setVariantType($var)
    {
        GPBUtil::checkMessage($var, \Ydb\VariantType::class);
        $this->writeOneof(106, $var);

        return $this;
    }

    /**
     * Special types 
     *
     * Generated from protobuf field <code>.google.protobuf.NullValue void_type = 201;</code>
     * @return int
     */
    public function getVoidType()
    {
        return $this->readOneof(201);
    }

    public function hasVoidType()
    {
        return $this->hasOneof(201);
    }

    /**
     * Special types 
     *
     * Generated from protobuf field <code>.google.protobuf.NullValue void_type = 201;</code>
     * @param int $var
     * @return $this
     */
    public function setVoidType($var)
    {
        GPBUtil::checkEnum($var, \Google\Protobuf\NullValue::class);
        $this->writeOneof(201, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

