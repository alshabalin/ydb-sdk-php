<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_experimental.proto

namespace Ydb\Experimental;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.Experimental.ExecuteStreamQueryResult</code>
 */
class ExecuteStreamQueryResult extends \Google\Protobuf\Internal\Message
{
    protected $result;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\ResultSet $result_set
     *     @type string $profile
     *     @type \Ydb\Experimental\StreamQueryProgress $progress
     *     @type string $query_plan
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbExperimental::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Ydb.ResultSet result_set = 1;</code>
     * @return \Ydb\ResultSet
     */
    public function getResultSet()
    {
        return $this->readOneof(1);
    }

    public function hasResultSet()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.Ydb.ResultSet result_set = 1;</code>
     * @param \Ydb\ResultSet $var
     * @return $this
     */
    public function setResultSet($var)
    {
        GPBUtil::checkMessage($var, \Ydb\ResultSet::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string profile = 2;</code>
     * @return string
     */
    public function getProfile()
    {
        return $this->readOneof(2);
    }

    public function hasProfile()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>string profile = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setProfile($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.Experimental.StreamQueryProgress progress = 3;</code>
     * @return \Ydb\Experimental\StreamQueryProgress
     */
    public function getProgress()
    {
        return $this->readOneof(3);
    }

    public function hasProgress()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Experimental.StreamQueryProgress progress = 3;</code>
     * @param \Ydb\Experimental\StreamQueryProgress $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Experimental\StreamQueryProgress::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string query_plan = 4;</code>
     * @return string
     */
    public function getQueryPlan()
    {
        return $this->readOneof(4);
    }

    public function hasQueryPlan()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>string query_plan = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setQueryPlan($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResult()
    {
        return $this->whichOneof("result");
    }

}

