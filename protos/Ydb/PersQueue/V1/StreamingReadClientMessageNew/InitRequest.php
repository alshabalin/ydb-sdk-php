<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_persqueue_v1.proto

namespace Ydb\PersQueue\V1\StreamingReadClientMessageNew;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Handshake request.
 *
 * Generated from protobuf message <code>Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest</code>
 */
class InitRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Message that describes topic to read.
     * Topics that will be read by this session.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.StreamingReadClientMessageNew.TopicReadSettings topics_read_settings = 1;</code>
     */
    private $topics_read_settings;
    /**
     * Flag that indicates reading only of original topics in cluster or all including mirrored.
     *
     * Generated from protobuf field <code>bool read_only_original = 2;</code>
     */
    protected $read_only_original = false;
    /**
     * Path of consumer that is used for reading by this session.
     *
     * Generated from protobuf field <code>string consumer = 3;</code>
     */
    protected $consumer = '';
    /**
     * Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
     *
     * Generated from protobuf field <code>int64 max_lag_duration_ms = 4;</code>
     */
    protected $max_lag_duration_ms = 0;
    /**
     * Read data only after this timestamp from all topics.
     *
     * Generated from protobuf field <code>int64 start_from_written_at_ms = 5;</code>
     */
    protected $start_from_written_at_ms = 0;
    /**
     * Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
     * StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
     * or error if client will not be able to read data.
     *
     * Generated from protobuf field <code>int64 max_supported_block_format_version = 6;</code>
     */
    protected $max_supported_block_format_version = 0;
    /**
     * Maximal size of client cache for message_group_id, ip and meta, per partition.
     * There is separate caches for each partition partition streams.
     * There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
     *
     * Generated from protobuf field <code>int64 max_meta_cache_size = 10;</code>
     */
    protected $max_meta_cache_size = 0;
    /**
     * Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
     *
     * Generated from protobuf field <code>string session_id = 100;</code>
     */
    protected $session_id = '';
    /**
     * 0 for first init message and incremental value for connect retries.
     *
     * Generated from protobuf field <code>int64 connection_attempt = 101;</code>
     */
    protected $connection_attempt = 0;
    /**
     * Formed state for retries. If not retry - do not use this field.
     *
     * Generated from protobuf field <code>.Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest.State state = 102;</code>
     */
    protected $state = null;
    /**
     * Generated from protobuf field <code>int64 idle_timeout_ms = 200;</code>
     */
    protected $idle_timeout_ms = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\PersQueue\V1\StreamingReadClientMessageNew\TopicReadSettings[]|\Google\Protobuf\Internal\RepeatedField $topics_read_settings
     *           Message that describes topic to read.
     *           Topics that will be read by this session.
     *     @type bool $read_only_original
     *           Flag that indicates reading only of original topics in cluster or all including mirrored.
     *     @type string $consumer
     *           Path of consumer that is used for reading by this session.
     *     @type int|string $max_lag_duration_ms
     *           Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
     *     @type int|string $start_from_written_at_ms
     *           Read data only after this timestamp from all topics.
     *     @type int|string $max_supported_block_format_version
     *           Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
     *           StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
     *           or error if client will not be able to read data.
     *     @type int|string $max_meta_cache_size
     *           Maximal size of client cache for message_group_id, ip and meta, per partition.
     *           There is separate caches for each partition partition streams.
     *           There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
     *     @type string $session_id
     *           Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
     *     @type int|string $connection_attempt
     *           0 for first init message and incremental value for connect retries.
     *     @type \Ydb\PersQueue\V1\StreamingReadClientMessageNew\InitRequest\State $state
     *           Formed state for retries. If not retry - do not use this field.
     *     @type int|string $idle_timeout_ms
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbPersqueueV1::initOnce();
        parent::__construct($data);
    }

    /**
     * Message that describes topic to read.
     * Topics that will be read by this session.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.StreamingReadClientMessageNew.TopicReadSettings topics_read_settings = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTopicsReadSettings()
    {
        return $this->topics_read_settings;
    }

    /**
     * Message that describes topic to read.
     * Topics that will be read by this session.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.StreamingReadClientMessageNew.TopicReadSettings topics_read_settings = 1;</code>
     * @param \Ydb\PersQueue\V1\StreamingReadClientMessageNew\TopicReadSettings[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTopicsReadSettings($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Ydb\PersQueue\V1\StreamingReadClientMessageNew\TopicReadSettings::class);
        $this->topics_read_settings = $arr;

        return $this;
    }

    /**
     * Flag that indicates reading only of original topics in cluster or all including mirrored.
     *
     * Generated from protobuf field <code>bool read_only_original = 2;</code>
     * @return bool
     */
    public function getReadOnlyOriginal()
    {
        return $this->read_only_original;
    }

    /**
     * Flag that indicates reading only of original topics in cluster or all including mirrored.
     *
     * Generated from protobuf field <code>bool read_only_original = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setReadOnlyOriginal($var)
    {
        GPBUtil::checkBool($var);
        $this->read_only_original = $var;

        return $this;
    }

    /**
     * Path of consumer that is used for reading by this session.
     *
     * Generated from protobuf field <code>string consumer = 3;</code>
     * @return string
     */
    public function getConsumer()
    {
        return $this->consumer;
    }

    /**
     * Path of consumer that is used for reading by this session.
     *
     * Generated from protobuf field <code>string consumer = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setConsumer($var)
    {
        GPBUtil::checkString($var, True);
        $this->consumer = $var;

        return $this;
    }

    /**
     * Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
     *
     * Generated from protobuf field <code>int64 max_lag_duration_ms = 4;</code>
     * @return int|string
     */
    public function getMaxLagDurationMs()
    {
        return $this->max_lag_duration_ms;
    }

    /**
     * Skip all messages that has write timestamp smaller than now - max_time_lag_ms.
     *
     * Generated from protobuf field <code>int64 max_lag_duration_ms = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxLagDurationMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_lag_duration_ms = $var;

        return $this;
    }

    /**
     * Read data only after this timestamp from all topics.
     *
     * Generated from protobuf field <code>int64 start_from_written_at_ms = 5;</code>
     * @return int|string
     */
    public function getStartFromWrittenAtMs()
    {
        return $this->start_from_written_at_ms;
    }

    /**
     * Read data only after this timestamp from all topics.
     *
     * Generated from protobuf field <code>int64 start_from_written_at_ms = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setStartFromWrittenAtMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->start_from_written_at_ms = $var;

        return $this;
    }

    /**
     * Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
     * StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
     * or error if client will not be able to read data.
     *
     * Generated from protobuf field <code>int64 max_supported_block_format_version = 6;</code>
     * @return int|string
     */
    public function getMaxSupportedBlockFormatVersion()
    {
        return $this->max_supported_block_format_version;
    }

    /**
     * Maximum block format version supported by the client. Server will asses this parameter and return actual data blocks version in
     * StreamingReadServerMessage.InitResponse.block_format_version_by_topic (and StreamingReadServerMessage.AddTopicResponse.block_format_version)
     * or error if client will not be able to read data.
     *
     * Generated from protobuf field <code>int64 max_supported_block_format_version = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxSupportedBlockFormatVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_supported_block_format_version = $var;

        return $this;
    }

    /**
     * Maximal size of client cache for message_group_id, ip and meta, per partition.
     * There is separate caches for each partition partition streams.
     * There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
     *
     * Generated from protobuf field <code>int64 max_meta_cache_size = 10;</code>
     * @return int|string
     */
    public function getMaxMetaCacheSize()
    {
        return $this->max_meta_cache_size;
    }

    /**
     * Maximal size of client cache for message_group_id, ip and meta, per partition.
     * There is separate caches for each partition partition streams.
     * There is separate caches for message group identifiers, ip and meta inside one partition partition stream.
     *
     * Generated from protobuf field <code>int64 max_meta_cache_size = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxMetaCacheSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_meta_cache_size = $var;

        return $this;
    }

    /**
     * Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
     *
     * Generated from protobuf field <code>string session_id = 100;</code>
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Session identifier for retries. Must be the same as session_id from Inited server response. If this is first connect, not retry - do not use this field.
     *
     * Generated from protobuf field <code>string session_id = 100;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->session_id = $var;

        return $this;
    }

    /**
     * 0 for first init message and incremental value for connect retries.
     *
     * Generated from protobuf field <code>int64 connection_attempt = 101;</code>
     * @return int|string
     */
    public function getConnectionAttempt()
    {
        return $this->connection_attempt;
    }

    /**
     * 0 for first init message and incremental value for connect retries.
     *
     * Generated from protobuf field <code>int64 connection_attempt = 101;</code>
     * @param int|string $var
     * @return $this
     */
    public function setConnectionAttempt($var)
    {
        GPBUtil::checkInt64($var);
        $this->connection_attempt = $var;

        return $this;
    }

    /**
     * Formed state for retries. If not retry - do not use this field.
     *
     * Generated from protobuf field <code>.Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest.State state = 102;</code>
     * @return \Ydb\PersQueue\V1\StreamingReadClientMessageNew\InitRequest\State
     */
    public function getState()
    {
        return isset($this->state) ? $this->state : null;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     * Formed state for retries. If not retry - do not use this field.
     *
     * Generated from protobuf field <code>.Ydb.PersQueue.V1.StreamingReadClientMessageNew.InitRequest.State state = 102;</code>
     * @param \Ydb\PersQueue\V1\StreamingReadClientMessageNew\InitRequest\State $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkMessage($var, \Ydb\PersQueue\V1\StreamingReadClientMessageNew\InitRequest\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 idle_timeout_ms = 200;</code>
     * @return int|string
     */
    public function getIdleTimeoutMs()
    {
        return $this->idle_timeout_ms;
    }

    /**
     * Generated from protobuf field <code>int64 idle_timeout_ms = 200;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIdleTimeoutMs($var)
    {
        GPBUtil::checkInt64($var);
        $this->idle_timeout_ms = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InitRequest::class, \Ydb\PersQueue\V1\StreamingReadClientMessageNew_InitRequest::class);

