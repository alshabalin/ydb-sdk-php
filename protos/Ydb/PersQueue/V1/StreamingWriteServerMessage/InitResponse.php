<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_persqueue_v1.proto

namespace Ydb\PersQueue\V1\StreamingWriteServerMessage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response for handshake.
 *
 * Generated from protobuf message <code>Ydb.PersQueue.V1.StreamingWriteServerMessage.InitResponse</code>
 */
class InitResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Last persisted message's sequence number for this message group.
     *
     * Generated from protobuf field <code>int64 last_sequence_number = 1;</code>
     */
    protected $last_sequence_number = 0;
    /**
     * Unique identifier of write session. Used for debug purposes.
     *
     * Generated from protobuf field <code>string session_id = 2;</code>
     */
    protected $session_id = '';
    /**
     * Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
     *
     * Generated from protobuf field <code>string topic = 3;</code>
     */
    protected $topic = '';
    /**
     * Write session is established to this cluster. Client data will be in instance of topic in this cluster.
     *
     * Generated from protobuf field <code>string cluster = 4;</code>
     */
    protected $cluster = '';
    /**
     * Identifier of partition that is matched for this write session.
     *
     * Generated from protobuf field <code>int64 partition_id = 5;</code>
     */
    protected $partition_id = 0;
    /**
     * Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
     *
     * Generated from protobuf field <code>int64 block_format_version = 6;</code>
     */
    protected $block_format_version = 0;
    /**
     * Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.Codec supported_codecs = 10;</code>
     */
    private $supported_codecs;
    /**
     * Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
     * In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
     *
     * Generated from protobuf field <code>int64 max_flush_window_size = 7;</code>
     */
    protected $max_flush_window_size = 0;
    /**
     * How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
     *
     * Generated from protobuf field <code>int64 max_block_size = 8;</code>
     */
    protected $max_block_size = 0;
    /**
     * Opaque blob, used for fast reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 9;</code>
     */
    protected $connection_meta = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $last_sequence_number
     *           Last persisted message's sequence number for this message group.
     *     @type string $session_id
     *           Unique identifier of write session. Used for debug purposes.
     *     @type string $topic
     *           Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
     *     @type string $cluster
     *           Write session is established to this cluster. Client data will be in instance of topic in this cluster.
     *     @type int|string $partition_id
     *           Identifier of partition that is matched for this write session.
     *     @type int|string $block_format_version
     *           Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $supported_codecs
     *           Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
     *     @type int|string $max_flush_window_size
     *           Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
     *           In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
     *     @type int|string $max_block_size
     *           How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
     *     @type string $connection_meta
     *           Opaque blob, used for fast reconnects.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbPersqueueV1::initOnce();
        parent::__construct($data);
    }

    /**
     * Last persisted message's sequence number for this message group.
     *
     * Generated from protobuf field <code>int64 last_sequence_number = 1;</code>
     * @return int|string
     */
    public function getLastSequenceNumber()
    {
        return $this->last_sequence_number;
    }

    /**
     * Last persisted message's sequence number for this message group.
     *
     * Generated from protobuf field <code>int64 last_sequence_number = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLastSequenceNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->last_sequence_number = $var;

        return $this;
    }

    /**
     * Unique identifier of write session. Used for debug purposes.
     *
     * Generated from protobuf field <code>string session_id = 2;</code>
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Unique identifier of write session. Used for debug purposes.
     *
     * Generated from protobuf field <code>string session_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->session_id = $var;

        return $this;
    }

    /**
     * Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
     *
     * Generated from protobuf field <code>string topic = 3;</code>
     * @return string
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * Path of topic that matched for this write session. Used for debug purposes, will be the same as in Init request from client.
     *
     * Generated from protobuf field <code>string topic = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic = $var;

        return $this;
    }

    /**
     * Write session is established to this cluster. Client data will be in instance of topic in this cluster.
     *
     * Generated from protobuf field <code>string cluster = 4;</code>
     * @return string
     */
    public function getCluster()
    {
        return $this->cluster;
    }

    /**
     * Write session is established to this cluster. Client data will be in instance of topic in this cluster.
     *
     * Generated from protobuf field <code>string cluster = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCluster($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster = $var;

        return $this;
    }

    /**
     * Identifier of partition that is matched for this write session.
     *
     * Generated from protobuf field <code>int64 partition_id = 5;</code>
     * @return int|string
     */
    public function getPartitionId()
    {
        return $this->partition_id;
    }

    /**
     * Identifier of partition that is matched for this write session.
     *
     * Generated from protobuf field <code>int64 partition_id = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPartitionId($var)
    {
        GPBUtil::checkInt64($var);
        $this->partition_id = $var;

        return $this;
    }

    /**
     * Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
     *
     * Generated from protobuf field <code>int64 block_format_version = 6;</code>
     * @return int|string
     */
    public function getBlockFormatVersion()
    {
        return $this->block_format_version;
    }

    /**
     * Block (see StreamingWriteClientMessage.WriteRequest.blocks_data) format version supported by server or configured for a topic. Client must write data only with them.
     *
     * Generated from protobuf field <code>int64 block_format_version = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBlockFormatVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->block_format_version = $var;

        return $this;
    }

    /**
     * Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.Codec supported_codecs = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSupportedCodecs()
    {
        return $this->supported_codecs;
    }

    /**
     * Client can only use compression codecs from this set to write messages to topic, session will be closed with BAD_REQUEST otherwise.
     *
     * Generated from protobuf field <code>repeated .Ydb.PersQueue.V1.Codec supported_codecs = 10;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSupportedCodecs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Ydb\PersQueue\V1\Codec::class);
        $this->supported_codecs = $arr;

        return $this;
    }

    /**
     * Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
     * In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
     *
     * Generated from protobuf field <code>int64 max_flush_window_size = 7;</code>
     * @return int|string
     */
    public function getMaxFlushWindowSize()
    {
        return $this->max_flush_window_size;
    }

    /**
     * Maximal flush window size choosed by server. Size of uncompressed data not sended to server must not be bigger than flush window size.
     * In other words, this is maximal size of gap inside uncompressed data, which is not sended to server yet.
     *
     * Generated from protobuf field <code>int64 max_flush_window_size = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxFlushWindowSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_flush_window_size = $var;

        return $this;
    }

    /**
     * How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
     *
     * Generated from protobuf field <code>int64 max_block_size = 8;</code>
     * @return int|string
     */
    public function getMaxBlockSize()
    {
        return $this->max_block_size;
    }

    /**
     * How big blocks per stream could be(in uncompressed size). When block contains more than max_block_size of uncompressed data - block must be truncated.
     *
     * Generated from protobuf field <code>int64 max_block_size = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxBlockSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_block_size = $var;

        return $this;
    }

    /**
     * Opaque blob, used for fast reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 9;</code>
     * @return string
     */
    public function getConnectionMeta()
    {
        return $this->connection_meta;
    }

    /**
     * Opaque blob, used for fast reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setConnectionMeta($var)
    {
        GPBUtil::checkString($var, False);
        $this->connection_meta = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InitResponse::class, \Ydb\PersQueue\V1\StreamingWriteServerMessage_InitResponse::class);

