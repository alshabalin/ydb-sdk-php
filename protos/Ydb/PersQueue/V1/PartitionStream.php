<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_persqueue_v1.proto

namespace Ydb\PersQueue\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Message that represens concrete partition partition stream.
 *
 * Generated from protobuf message <code>Ydb.PersQueue.V1.PartitionStream</code>
 */
class PartitionStream extends \Google\Protobuf\Internal\Message
{
    /**
     * Topic path of partition.
     *
     * Generated from protobuf field <code>string topic = 1;</code>
     */
    protected $topic = '';
    /**
     * Cluster of topic instance.
     *
     * Generated from protobuf field <code>string cluster = 2;</code>
     */
    protected $cluster = '';
    /**
     * Partition identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_id = 3;</code>
     */
    protected $partition_id = 0;
    /**
     * Partition group identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_group_id = 4;</code>
     */
    protected $partition_group_id = 0;
    /**
     * Identitifier of partition stream. Unique inside one RPC call.
     *
     * Generated from protobuf field <code>int64 partition_stream_id = 6;</code>
     */
    protected $partition_stream_id = 0;
    /**
     * Opaque blob. Provide it with partition stream in state for session reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 7;</code>
     */
    protected $connection_meta = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $topic
     *           Topic path of partition.
     *     @type string $cluster
     *           Cluster of topic instance.
     *     @type int|string $partition_id
     *           Partition identifier. Explicit only for debug purposes.
     *     @type int|string $partition_group_id
     *           Partition group identifier. Explicit only for debug purposes.
     *     @type int|string $partition_stream_id
     *           Identitifier of partition stream. Unique inside one RPC call.
     *     @type string $connection_meta
     *           Opaque blob. Provide it with partition stream in state for session reconnects.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbPersqueueV1::initOnce();
        parent::__construct($data);
    }

    /**
     * Topic path of partition.
     *
     * Generated from protobuf field <code>string topic = 1;</code>
     * @return string
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * Topic path of partition.
     *
     * Generated from protobuf field <code>string topic = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic = $var;

        return $this;
    }

    /**
     * Cluster of topic instance.
     *
     * Generated from protobuf field <code>string cluster = 2;</code>
     * @return string
     */
    public function getCluster()
    {
        return $this->cluster;
    }

    /**
     * Cluster of topic instance.
     *
     * Generated from protobuf field <code>string cluster = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCluster($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster = $var;

        return $this;
    }

    /**
     * Partition identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_id = 3;</code>
     * @return int|string
     */
    public function getPartitionId()
    {
        return $this->partition_id;
    }

    /**
     * Partition identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_id = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPartitionId($var)
    {
        GPBUtil::checkInt64($var);
        $this->partition_id = $var;

        return $this;
    }

    /**
     * Partition group identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_group_id = 4;</code>
     * @return int|string
     */
    public function getPartitionGroupId()
    {
        return $this->partition_group_id;
    }

    /**
     * Partition group identifier. Explicit only for debug purposes.
     *
     * Generated from protobuf field <code>int64 partition_group_id = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPartitionGroupId($var)
    {
        GPBUtil::checkInt64($var);
        $this->partition_group_id = $var;

        return $this;
    }

    /**
     * Identitifier of partition stream. Unique inside one RPC call.
     *
     * Generated from protobuf field <code>int64 partition_stream_id = 6;</code>
     * @return int|string
     */
    public function getPartitionStreamId()
    {
        return $this->partition_stream_id;
    }

    /**
     * Identitifier of partition stream. Unique inside one RPC call.
     *
     * Generated from protobuf field <code>int64 partition_stream_id = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPartitionStreamId($var)
    {
        GPBUtil::checkInt64($var);
        $this->partition_stream_id = $var;

        return $this;
    }

    /**
     * Opaque blob. Provide it with partition stream in state for session reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 7;</code>
     * @return string
     */
    public function getConnectionMeta()
    {
        return $this->connection_meta;
    }

    /**
     * Opaque blob. Provide it with partition stream in state for session reconnects.
     *
     * Generated from protobuf field <code>bytes connection_meta = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setConnectionMeta($var)
    {
        GPBUtil::checkString($var, False);
        $this->connection_meta = $var;

        return $this;
    }

}

