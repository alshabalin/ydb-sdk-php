<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_scheme.proto

namespace Ydb\Scheme\Entry;

use UnexpectedValueException;

/**
 * Protobuf type <code>Ydb.Scheme.Entry.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>DIRECTORY = 1;</code>
     */
    const DIRECTORY = 1;
    /**
     * Generated from protobuf enum <code>TABLE = 2;</code>
     */
    const TABLE = 2;
    /**
     * Generated from protobuf enum <code>PERS_QUEUE_GROUP = 3;</code>
     */
    const PERS_QUEUE_GROUP = 3;
    /**
     * Generated from protobuf enum <code>DATABASE = 4;</code>
     */
    const DATABASE = 4;
    /**
     * Generated from protobuf enum <code>RTMR_VOLUME = 5;</code>
     */
    const RTMR_VOLUME = 5;
    /**
     * Generated from protobuf enum <code>BLOCK_STORE_VOLUME = 6;</code>
     */
    const BLOCK_STORE_VOLUME = 6;
    /**
     * Generated from protobuf enum <code>COORDINATION_NODE = 7;</code>
     */
    const COORDINATION_NODE = 7;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::DIRECTORY => 'DIRECTORY',
        self::TABLE => 'TABLE',
        self::PERS_QUEUE_GROUP => 'PERS_QUEUE_GROUP',
        self::DATABASE => 'DATABASE',
        self::RTMR_VOLUME => 'RTMR_VOLUME',
        self::BLOCK_STORE_VOLUME => 'BLOCK_STORE_VOLUME',
        self::COORDINATION_NODE => 'COORDINATION_NODE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Ydb\Scheme\Entry_Type::class);

