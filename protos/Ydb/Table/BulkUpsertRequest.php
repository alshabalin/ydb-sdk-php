<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_table.proto

namespace Ydb\Table;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.Table.BulkUpsertRequest</code>
 */
class BulkUpsertRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string table = 1;</code>
     */
    protected $table = '';
    /**
     * "rows" parameter must be a list of structs where each stuct represents one row.
     * It must contain all key columns but not necessarily all non-key columns.
     * Similar to UPSERT statement only values of specified columns will be updated.
     *
     * Generated from protobuf field <code>.Ydb.TypedValue rows = 2;</code>
     */
    protected $rows = null;
    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 3;</code>
     */
    protected $operation_params = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $table
     *     @type \Ydb\TypedValue $rows
     *           "rows" parameter must be a list of structs where each stuct represents one row.
     *           It must contain all key columns but not necessarily all non-key columns.
     *           Similar to UPSERT statement only values of specified columns will be updated.
     *     @type \Ydb\Operations\OperationParams $operation_params
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbTable::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string table = 1;</code>
     * @return string
     */
    public function getTable()
    {
        return $this->table;
    }

    /**
     * Generated from protobuf field <code>string table = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->table = $var;

        return $this;
    }

    /**
     * "rows" parameter must be a list of structs where each stuct represents one row.
     * It must contain all key columns but not necessarily all non-key columns.
     * Similar to UPSERT statement only values of specified columns will be updated.
     *
     * Generated from protobuf field <code>.Ydb.TypedValue rows = 2;</code>
     * @return \Ydb\TypedValue
     */
    public function getRows()
    {
        return isset($this->rows) ? $this->rows : null;
    }

    public function hasRows()
    {
        return isset($this->rows);
    }

    public function clearRows()
    {
        unset($this->rows);
    }

    /**
     * "rows" parameter must be a list of structs where each stuct represents one row.
     * It must contain all key columns but not necessarily all non-key columns.
     * Similar to UPSERT statement only values of specified columns will be updated.
     *
     * Generated from protobuf field <code>.Ydb.TypedValue rows = 2;</code>
     * @param \Ydb\TypedValue $var
     * @return $this
     */
    public function setRows($var)
    {
        GPBUtil::checkMessage($var, \Ydb\TypedValue::class);
        $this->rows = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 3;</code>
     * @return \Ydb\Operations\OperationParams
     */
    public function getOperationParams()
    {
        return isset($this->operation_params) ? $this->operation_params : null;
    }

    public function hasOperationParams()
    {
        return isset($this->operation_params);
    }

    public function clearOperationParams()
    {
        unset($this->operation_params);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 3;</code>
     * @param \Ydb\Operations\OperationParams $var
     * @return $this
     */
    public function setOperationParams($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Operations\OperationParams::class);
        $this->operation_params = $var;

        return $this;
    }

}

