<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/protos/ydb_s3_internal.proto

namespace Ydb\S3Internal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.S3Internal.S3ListingResult</code>
 */
class S3ListingResult extends \Google\Protobuf\Internal\Message
{
    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet common_prefixes = 1;</code>
     */
    protected $common_prefixes = null;
    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet contents = 2;</code>
     */
    protected $contents = null;
    /**
     * Number of key columns starting from path and up to the end
     *
     * Generated from protobuf field <code>uint32 key_suffix_size = 3;</code>
     */
    protected $key_suffix_size = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\ResultSet $common_prefixes
     *           Every Contents row starts with key suffix with KeySuffixSize columns
     *     @type \Ydb\ResultSet $contents
     *           Every Contents row starts with key suffix with KeySuffixSize columns
     *     @type int $key_suffix_size
     *           Number of key columns starting from path and up to the end
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Kikimr\PBPublic\Api\Protos\YdbS3Internal::initOnce();
        parent::__construct($data);
    }

    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet common_prefixes = 1;</code>
     * @return \Ydb\ResultSet
     */
    public function getCommonPrefixes()
    {
        return isset($this->common_prefixes) ? $this->common_prefixes : null;
    }

    public function hasCommonPrefixes()
    {
        return isset($this->common_prefixes);
    }

    public function clearCommonPrefixes()
    {
        unset($this->common_prefixes);
    }

    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet common_prefixes = 1;</code>
     * @param \Ydb\ResultSet $var
     * @return $this
     */
    public function setCommonPrefixes($var)
    {
        GPBUtil::checkMessage($var, \Ydb\ResultSet::class);
        $this->common_prefixes = $var;

        return $this;
    }

    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet contents = 2;</code>
     * @return \Ydb\ResultSet
     */
    public function getContents()
    {
        return isset($this->contents) ? $this->contents : null;
    }

    public function hasContents()
    {
        return isset($this->contents);
    }

    public function clearContents()
    {
        unset($this->contents);
    }

    /**
     * Every Contents row starts with key suffix with KeySuffixSize columns
     *
     * Generated from protobuf field <code>.Ydb.ResultSet contents = 2;</code>
     * @param \Ydb\ResultSet $var
     * @return $this
     */
    public function setContents($var)
    {
        GPBUtil::checkMessage($var, \Ydb\ResultSet::class);
        $this->contents = $var;

        return $this;
    }

    /**
     * Number of key columns starting from path and up to the end
     *
     * Generated from protobuf field <code>uint32 key_suffix_size = 3;</code>
     * @return int
     */
    public function getKeySuffixSize()
    {
        return $this->key_suffix_size;
    }

    /**
     * Number of key columns starting from path and up to the end
     *
     * Generated from protobuf field <code>uint32 key_suffix_size = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setKeySuffixSize($var)
    {
        GPBUtil::checkUint32($var);
        $this->key_suffix_size = $var;

        return $this;
    }

}

